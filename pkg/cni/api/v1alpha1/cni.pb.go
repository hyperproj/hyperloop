// Copyright The Hyperloop Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pkg/cni/api/v1alpha1/cni.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_UNKNOWN                                    ErrorCode = 0
	ErrorCode_INCOMPATIBLE_CNI_VERSION                   ErrorCode = 1
	ErrorCode_UNSUPPORTED_FIELD_IN_NETWORK_CONFIGURATION ErrorCode = 2
	ErrorCode_INVALID_CONTAINER                          ErrorCode = 3
	ErrorCode_INVALID_NECESSARY_ENVIRONMENT_VARIABLES    ErrorCode = 4
	ErrorCode_IO_FAILURE                                 ErrorCode = 5
	ErrorCode_FAILED_TO_DECODE_CONTENT                   ErrorCode = 6
	ErrorCode_INVALID_NETWORK_CONFIGURATION              ErrorCode = 7
	ErrorCode_TRY_AGAIN_LATER                            ErrorCode = 11
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "INCOMPATIBLE_CNI_VERSION",
		2:  "UNSUPPORTED_FIELD_IN_NETWORK_CONFIGURATION",
		3:  "INVALID_CONTAINER",
		4:  "INVALID_NECESSARY_ENVIRONMENT_VARIABLES",
		5:  "IO_FAILURE",
		6:  "FAILED_TO_DECODE_CONTENT",
		7:  "INVALID_NETWORK_CONFIGURATION",
		11: "TRY_AGAIN_LATER",
	}
	ErrorCode_value = map[string]int32{
		"UNKNOWN":                  0,
		"INCOMPATIBLE_CNI_VERSION": 1,
		"UNSUPPORTED_FIELD_IN_NETWORK_CONFIGURATION": 2,
		"INVALID_CONTAINER":                          3,
		"INVALID_NECESSARY_ENVIRONMENT_VARIABLES":    4,
		"IO_FAILURE":                    5,
		"FAILED_TO_DECODE_CONTENT":      6,
		"INVALID_NETWORK_CONFIGURATION": 7,
		"TRY_AGAIN_LATER":               11,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_cni_api_v1alpha1_cni_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_pkg_cni_api_v1alpha1_cni_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_cni_api_v1alpha1_cni_proto_rawDescGZIP(), []int{0}
}

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CniVersion    string                 `protobuf:"bytes,1,opt,name=cni_version,json=cniVersion,proto3" json:"cni_version,omitempty"`
	Code          ErrorCode              `protobuf:"varint,2,opt,name=code,proto3,enum=h.hl.pkg.cni.api.v1alpha1.ErrorCode" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Details       []*anypb.Any           `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_pkg_cni_api_v1alpha1_cni_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCniVersion() string {
	if x != nil {
		return x.CniVersion
	}
	return ""
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_UNKNOWN
}

func (x *Error) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Error) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type CmdArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Netns         string                 `protobuf:"bytes,2,opt,name=netns,proto3" json:"netns,omitempty"`
	IfName        string                 `protobuf:"bytes,3,opt,name=if_name,json=ifName,proto3" json:"if_name,omitempty"`
	Args          string                 `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	NetnsOverride string                 `protobuf:"bytes,6,opt,name=netns_override,json=netnsOverride,proto3" json:"netns_override,omitempty"`
	StdinData     []byte                 `protobuf:"bytes,7,opt,name=stdin_data,json=stdinData,proto3" json:"stdin_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdArgs) Reset() {
	*x = CmdArgs{}
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdArgs) ProtoMessage() {}

func (x *CmdArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdArgs.ProtoReflect.Descriptor instead.
func (*CmdArgs) Descriptor() ([]byte, []int) {
	return file_pkg_cni_api_v1alpha1_cni_proto_rawDescGZIP(), []int{1}
}

func (x *CmdArgs) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *CmdArgs) GetNetns() string {
	if x != nil {
		return x.Netns
	}
	return ""
}

func (x *CmdArgs) GetIfName() string {
	if x != nil {
		return x.IfName
	}
	return ""
}

func (x *CmdArgs) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *CmdArgs) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CmdArgs) GetNetnsOverride() string {
	if x != nil {
		return x.NetnsOverride
	}
	return ""
}

func (x *CmdArgs) GetStdinData() []byte {
	if x != nil {
		return x.StdinData
	}
	return nil
}

type CniRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CmdArgs       *CmdArgs               `protobuf:"bytes,1,opt,name=cmd_args,json=cmdArgs,proto3" json:"cmd_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CniRequest) Reset() {
	*x = CniRequest{}
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CniRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CniRequest) ProtoMessage() {}

func (x *CniRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CniRequest.ProtoReflect.Descriptor instead.
func (*CniRequest) Descriptor() ([]byte, []int) {
	return file_pkg_cni_api_v1alpha1_cni_proto_rawDescGZIP(), []int{2}
}

func (x *CniRequest) GetCmdArgs() *CmdArgs {
	if x != nil {
		return x.CmdArgs
	}
	return nil
}

type CniResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CniResult     []byte                 `protobuf:"bytes,1,opt,name=cni_result,json=cniResult,proto3" json:"cni_result,omitempty"`
	Error         *Error                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CniResponse) Reset() {
	*x = CniResponse{}
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CniResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CniResponse) ProtoMessage() {}

func (x *CniResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_cni_api_v1alpha1_cni_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CniResponse.ProtoReflect.Descriptor instead.
func (*CniResponse) Descriptor() ([]byte, []int) {
	return file_pkg_cni_api_v1alpha1_cni_proto_rawDescGZIP(), []int{3}
}

func (x *CniResponse) GetCniResult() []byte {
	if x != nil {
		return x.CniResult
	}
	return nil
}

func (x *CniResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_pkg_cni_api_v1alpha1_cni_proto protoreflect.FileDescriptor

const file_pkg_cni_api_v1alpha1_cni_proto_rawDesc = "" +
	"\n" +
	"\x1epkg/cni/api/v1alpha1/cni.proto\x12\x19h.hl.pkg.cni.api.v1alpha1\x1a\x19google/protobuf/any.proto\"\xa4\x01\n" +
	"\x05Error\x12\x1f\n" +
	"\vcni_version\x18\x01 \x01(\tR\n" +
	"cniVersion\x128\n" +
	"\x04code\x18\x02 \x01(\x0e2$.h.hl.pkg.cni.api.v1alpha1.ErrorCodeR\x04code\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\x12.\n" +
	"\adetails\x18\x04 \x03(\v2\x14.google.protobuf.AnyR\adetails\"\xc9\x01\n" +
	"\aCmdArgs\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05netns\x18\x02 \x01(\tR\x05netns\x12\x17\n" +
	"\aif_name\x18\x03 \x01(\tR\x06ifName\x12\x12\n" +
	"\x04args\x18\x04 \x01(\tR\x04args\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\x12%\n" +
	"\x0enetns_override\x18\x06 \x01(\tR\rnetnsOverride\x12\x1d\n" +
	"\n" +
	"stdin_data\x18\a \x01(\fR\tstdinData\"K\n" +
	"\n" +
	"CniRequest\x12=\n" +
	"\bcmd_args\x18\x01 \x01(\v2\".h.hl.pkg.cni.api.v1alpha1.CmdArgsR\acmdArgs\"d\n" +
	"\vCniResponse\x12\x1d\n" +
	"\n" +
	"cni_result\x18\x01 \x01(\fR\tcniResult\x126\n" +
	"\x05error\x18\x02 \x01(\v2 .h.hl.pkg.cni.api.v1alpha1.ErrorR\x05error*\x90\x02\n" +
	"\tErrorCode\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x1c\n" +
	"\x18INCOMPATIBLE_CNI_VERSION\x10\x01\x12.\n" +
	"*UNSUPPORTED_FIELD_IN_NETWORK_CONFIGURATION\x10\x02\x12\x15\n" +
	"\x11INVALID_CONTAINER\x10\x03\x12+\n" +
	"'INVALID_NECESSARY_ENVIRONMENT_VARIABLES\x10\x04\x12\x0e\n" +
	"\n" +
	"IO_FAILURE\x10\x05\x12\x1c\n" +
	"\x18FAILED_TO_DECODE_CONTENT\x10\x06\x12!\n" +
	"\x1dINVALID_NETWORK_CONFIGURATION\x10\a\x12\x13\n" +
	"\x0fTRY_AGAIN_LATER\x10\v2\x8f\x02\n" +
	"\x03Cni\x12V\n" +
	"\x03Add\x12%.h.hl.pkg.cni.api.v1alpha1.CniRequest\x1a&.h.hl.pkg.cni.api.v1alpha1.CniResponse\"\x00\x12X\n" +
	"\x05Check\x12%.h.hl.pkg.cni.api.v1alpha1.CniRequest\x1a&.h.hl.pkg.cni.api.v1alpha1.CniResponse\"\x00\x12V\n" +
	"\x03Del\x12%.h.hl.pkg.cni.api.v1alpha1.CniRequest\x1a&.h.hl.pkg.cni.api.v1alpha1.CniResponse\"\x00B\x16Z\x14pkg/cni/api/v1alpha1b\x06proto3"

var (
	file_pkg_cni_api_v1alpha1_cni_proto_rawDescOnce sync.Once
	file_pkg_cni_api_v1alpha1_cni_proto_rawDescData []byte
)

func file_pkg_cni_api_v1alpha1_cni_proto_rawDescGZIP() []byte {
	file_pkg_cni_api_v1alpha1_cni_proto_rawDescOnce.Do(func() {
		file_pkg_cni_api_v1alpha1_cni_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_cni_api_v1alpha1_cni_proto_rawDesc), len(file_pkg_cni_api_v1alpha1_cni_proto_rawDesc)))
	})
	return file_pkg_cni_api_v1alpha1_cni_proto_rawDescData
}

var file_pkg_cni_api_v1alpha1_cni_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_cni_api_v1alpha1_cni_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_cni_api_v1alpha1_cni_proto_goTypes = []any{
	(ErrorCode)(0),      // 0: h.hl.pkg.cni.api.v1alpha1.ErrorCode
	(*Error)(nil),       // 1: h.hl.pkg.cni.api.v1alpha1.Error
	(*CmdArgs)(nil),     // 2: h.hl.pkg.cni.api.v1alpha1.CmdArgs
	(*CniRequest)(nil),  // 3: h.hl.pkg.cni.api.v1alpha1.CniRequest
	(*CniResponse)(nil), // 4: h.hl.pkg.cni.api.v1alpha1.CniResponse
	(*anypb.Any)(nil),   // 5: google.protobuf.Any
}
var file_pkg_cni_api_v1alpha1_cni_proto_depIdxs = []int32{
	0, // 0: h.hl.pkg.cni.api.v1alpha1.Error.code:type_name -> h.hl.pkg.cni.api.v1alpha1.ErrorCode
	5, // 1: h.hl.pkg.cni.api.v1alpha1.Error.details:type_name -> google.protobuf.Any
	2, // 2: h.hl.pkg.cni.api.v1alpha1.CniRequest.cmd_args:type_name -> h.hl.pkg.cni.api.v1alpha1.CmdArgs
	1, // 3: h.hl.pkg.cni.api.v1alpha1.CniResponse.error:type_name -> h.hl.pkg.cni.api.v1alpha1.Error
	3, // 4: h.hl.pkg.cni.api.v1alpha1.Cni.Add:input_type -> h.hl.pkg.cni.api.v1alpha1.CniRequest
	3, // 5: h.hl.pkg.cni.api.v1alpha1.Cni.Check:input_type -> h.hl.pkg.cni.api.v1alpha1.CniRequest
	3, // 6: h.hl.pkg.cni.api.v1alpha1.Cni.Del:input_type -> h.hl.pkg.cni.api.v1alpha1.CniRequest
	4, // 7: h.hl.pkg.cni.api.v1alpha1.Cni.Add:output_type -> h.hl.pkg.cni.api.v1alpha1.CniResponse
	4, // 8: h.hl.pkg.cni.api.v1alpha1.Cni.Check:output_type -> h.hl.pkg.cni.api.v1alpha1.CniResponse
	4, // 9: h.hl.pkg.cni.api.v1alpha1.Cni.Del:output_type -> h.hl.pkg.cni.api.v1alpha1.CniResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_cni_api_v1alpha1_cni_proto_init() }
func file_pkg_cni_api_v1alpha1_cni_proto_init() {
	if File_pkg_cni_api_v1alpha1_cni_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_cni_api_v1alpha1_cni_proto_rawDesc), len(file_pkg_cni_api_v1alpha1_cni_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_cni_api_v1alpha1_cni_proto_goTypes,
		DependencyIndexes: file_pkg_cni_api_v1alpha1_cni_proto_depIdxs,
		EnumInfos:         file_pkg_cni_api_v1alpha1_cni_proto_enumTypes,
		MessageInfos:      file_pkg_cni_api_v1alpha1_cni_proto_msgTypes,
	}.Build()
	File_pkg_cni_api_v1alpha1_cni_proto = out.File
	file_pkg_cni_api_v1alpha1_cni_proto_goTypes = nil
	file_pkg_cni_api_v1alpha1_cni_proto_depIdxs = nil
}
